name: Claude Code

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history needed for branching
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Claude Code
        uses: anthropics/claude-code-action@v1
        with:
          # Using Claude MAX OAuth (single-user personal repo)
          # This uses your $200/month MAX subscription instead of separate API billing
          # Official Anthropic guidance: "Claude Max subscriptions are intended for
          # a single user, and that applies here as well" (July 2025)
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

          # Allow Claude Code to execute database migrations and git operations
          # psql: Database migrations (run-migrations.sh needs this)
          # git: Version control operations
          # chmod: Make scripts executable
          allowedTools: "Read,Write,Edit,Glob,Grep,Bash(git *),Bash(psql *),Bash(chmod *)"
        env:
          # Database
          NEON_CONNECTION_STRING: ${{ secrets.NEON_CONNECTION_STRING }}

          # AI Providers
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          GOOGLE_GEMINI_API_KEY: ${{ secrets.GOOGLE_GEMINI_API_KEY }}

          # Web Scraping
          APIFY_API_TOKEN: ${{ secrets.APIFY_API_TOKEN }}

          # Slack
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
