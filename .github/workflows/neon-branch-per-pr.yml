name: Create/Delete Neon Branch for Pull Request

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: read
  pull-requests: write

jobs:
  setup:
    name: Setup
    outputs:
      branch: ${{ steps.branch_name.outputs.current_branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        id: branch_name
        uses: tj-actions/branch-names@v8

  create_neon_branch:
    name: Create Neon Branch
    outputs:
      db_url: ${{ steps.create_neon_branch.outputs.db_url }}
      db_url_pooled: ${{ steps.create_neon_branch.outputs.db_url_pooled }}
    needs: setup
    if: |
      github.event_name == 'pull_request' && (
      github.event.action == 'synchronize'
      || github.event.action == 'opened'
      || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get branch expiration date (2 weeks from now)
        id: get_expiration_date
        run: echo "EXPIRES_AT=$(date -u --date '+14 days' +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_ENV"

      - name: Create Neon Branch
        id: create_neon_branch
        uses: neondatabase/create-branch-action@v6
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch_name: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}
          expires_at: ${{ env.EXPIRES_AT }}

      - name: Verify Connection String
        run: |
          echo "✓ Neon branch created successfully"
          echo "✓ Branch ID: ${{ steps.create_neon_branch.outputs.branch_id }}"
          echo "✓ Connection string populated: $(if [ -n "${{ steps.create_neon_branch.outputs.db_url }}" ]; then echo "YES"; else echo "NO"; fi)"
          echo "✓ Using direct connection (recommended for migrations)"

      - name: Run Database Migrations
        env:
          DATABASE_URL: ${{ steps.create_neon_branch.outputs.db_url }}
        run: |
          echo "Running Day 1 database migrations on preview branch..."
          psql "${DATABASE_URL}" -f sql/001_create_orchestrator_log.sql
          psql "${DATABASE_URL}" -f sql/002_opportunity_tables.sql
          psql "${DATABASE_URL}" -f sql/003_threshold_seed.sql
          psql "${DATABASE_URL}" -f sql/004_runtime_logging.sql
          echo "✅ Migrations completed successfully"

      - name: Run Validation Tests
        env:
          DATABASE_URL: ${{ steps.create_neon_branch.outputs.db_url }}
        run: |
          echo "Running validation tests..."
          psql "${DATABASE_URL}" -f sql/tests/001_constraint_validation.sql
          echo "✅ Validation tests completed"

      - name: Post Schema Diff Comment to PR
        uses: neondatabase/schema-diff-action@v1
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          compare_branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}

  delete_neon_branch:
    name: Delete Neon Branch
    needs: setup
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Delete Neon Branch
        uses: neondatabase/delete-branch-action@v3
        with:
          project_id: ${{ vars.NEON_PROJECT_ID }}
          branch: preview/pr-${{ github.event.number }}-${{ needs.setup.outputs.branch }}
          api_key: ${{ secrets.NEON_API_KEY }}
